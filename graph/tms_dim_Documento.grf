<?xml version="1.0" encoding="UTF-8"?><Graph author="isabela.lourencini" created="Thu Dec 20 09:45:28 BRST 2018" guiVersion="3.4.4.P" id="1545312668311" licenseType="Commercial" modified="Tue Dec 06 14:46:03 BRST 2022" modifiedBy="Manoel" name="tms_dim_Documento" revision="1.24" showComponentDetails="true">
<Global>
<Metadata fileURL="${META_DIR}/obj_dto.fmt" id="Metadata2"/>
<Metadata id="Metadata6" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="|" name="Documento_Output" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="DOCUMENTO" type="string"/>
<Field name="SERIE" type="string"/>
<Field name="INSTANCIA" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata3" previewAttachment="zip:(${DATA_SOURCE_DIR}/PROTHEUS.zip)#TMS Indenizacao Transporte.csv" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="," label="zip:(./data/source/PROTHEUS.zip)#TMS Indenizacao Transporte.csv" name="Indenizacao_Transporte_Input" previewAttachmentCharset="ISO-8859-1" quoteChar="&quot;" quotedStrings="true" recordDelimiter="\n" skipSourceRows="1" type="delimited">
<Field name="BK_EMPRESA" type="string"/>
<Field name="BK_FILIAL" type="string"/>
<Field name="DATA_REGISTRO" type="string"/>
<Field name="HORA_REGISTRO" type="string"/>
<Field name="ITEM" type="string"/>
<Field name="FILIAL_REGISTRO" type="string"/>
<Field name="NUMERO_REGISTRO" type="string"/>
<Field name="RAMO_SEGURO" type="string"/>
<Field name="BK_CODIGO_OCORRENCIA" type="string"/>
<Field name="NUMERO_PROCESSO" type="string"/>
<Field name="BK_CDRORI" type="string"/>
<Field name="BK_CDRDES" type="string"/>
<Field name="BK_STATUS_INDENIZACAO" type="string"/>
<Field name="BK_CLIENTE" type="string"/>
<Field name="QUANTIDADE_OCORRENCIA" type="string"/>
<Field name="VALOR_PREJUIZO" type="string"/>
<Field name="VALOR_INDENIZADO" type="string"/>
<Field name="DATA_VENCIMENTO" type="string"/>
<Field name="DATA_ENCERRAMENTO" type="string"/>
<Field name="BK_FILIAL_DOCTO" type="string"/>
<Field name="BK_NUMERO_DOCUMENTO" type="string"/>
<Field name="BK_SERIE" type="string"/>
<Field name="BK_STATUS" type="string"/>
<Field name="BK_DOCTMS" type="string"/>
<Field name="BK_TIPTRA" type="string"/>
<Field name="RESPONSAVEL_OCORRENCIA" type="string"/>
<Field name="BK_REGIAO_CLI" type="string"/>
<Field name="BK_REGIAO_REM" type="string"/>
<Field name="BK_REGIAO_DES" type="string"/>
<Field name="BK_REGIAO_DEV" type="string"/>
<Field name="BK_REGIAO_CDRCAL" type="string"/>
<Field eofAsDelimiter="false" name="BK_REGIAO_CDRORI" type="string"/>
<Field name="INSTANCIA" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata0" previewAttachment="zip:(${DATA_SOURCE_DIR}/PROTHEUS.zip)#TMS Movimentacao Carga.csv" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="," label="zip:(./data/source/PROTHEUS.zip)#TMS Movimentacao Carga.csv" name="Movimentacao_Carga_Input" previewAttachmentCharset="ISO-8859-1" quoteChar="&quot;" quotedStrings="true" recordDelimiter="\n" skipSourceRows="1" type="delimited">
<Field name="BK_EMPRESA" type="string"/>
<Field name="BK_FILIAL" type="string"/>
<Field name="DATA_EMISSAO" type="string"/>
<Field name="BK_REMETENTE" type="string"/>
<Field name="BK_DESTINATARIO" type="string"/>
<Field name="BK_DEVEDOR" type="string"/>
<Field name="BK_CDRORI" type="string"/>
<Field name="BK_CDRDES" type="string"/>
<Field name="BK_CODNEG" type="string"/>
<Field name="BK_SERNEG" type="string"/>
<Field name="BK_FILIAL_ORIGEM" type="string"/>
<Field name="BK_FILIAL_DESTINO" type="string"/>
<Field name="BK_FILIAL_DOCTO" type="string"/>
<Field name="BK_DOCTMS" type="string"/>
<Field name="BK_TIPTRA" type="string"/>
<Field name="BK_REGIAO_REM" type="string"/>
<Field name="BK_REGIAO_DES" type="string"/>
<Field name="BK_REGIAO_DEV" type="string"/>
<Field name="BK_REGIAO_CDRCAL" type="string"/>
<Field name="BK_REGIAO_CDRORI" type="string"/>
<Field name="FILIAL_DOCUMENTO" type="string"/>
<Field name="DOCUMENTO" type="string"/>
<Field name="SERIE" type="string"/>
<Field name="PESO" type="string"/>
<Field name="PESO_CUBADO" type="string"/>
<Field name="PESO_M3" type="string"/>
<Field name="VOLUME" type="string"/>
<Field name="VALOR_MERCADORIA" type="string"/>
<Field eofAsDelimiter="false" name="VALOR_TOTAL" type="string"/>
<Field name="INSTANCIA" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata1" previewAttachment="zip:(${DATA_SOURCE_DIR}/PROTHEUS.zip)#TMS Ocorrencias Transporte.csv" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="," label="zip:(./data/source/PROTHEUS.zip)#TMS Ocorrencias Transporte.csv" name="Ocorrencias_Transporte_Input" previewAttachmentCharset="ISO-8859-1" quoteChar="&quot;" quotedStrings="true" recordDelimiter="\n" skipSourceRows="1" type="delimited">
<Field name="BK_EMPRESA" type="string"/>
<Field name="BK_FILIAL" type="string"/>
<Field name="DATA_OCORRENCIA" type="string"/>
<Field name="HORA_OCORRENCIA" type="string"/>
<Field name="FILIAL_OCORRENCIA" type="string"/>
<Field name="NUMERO_OCORRENCIA" type="string"/>
<Field name="NUMERO_VIAGEM" type="string"/>
<Field name="SEQUENCIA_OCORRENCIA" type="string"/>
<Field name="CODIGO_OCORRENCA" type="string"/>
<Field name="TIPO_OCORRENCA" type="string"/>
<Field name="BK_REMETENTE" type="string"/>
<Field name="BK_DESTINATARIO" type="string"/>
<Field name="BK_DEVEDOR" type="string"/>
<Field name="BK_CDRORI" type="string"/>
<Field name="BK_CDRDES" type="string"/>
<Field name="BK_CODNEG" type="string"/>
<Field name="BK_SERNEG" type="string"/>
<Field name="BK_FILIAL_ORIGEM" type="string"/>
<Field name="BK_FILIAL_DESTINO" type="string"/>
<Field name="BK_DOCTMS" type="string"/>
<Field name="BK_TIPTRA" type="string"/>
<Field name="BK_SERTMS" type="string"/>
<Field name="BK_REGIAO_REM" type="string"/>
<Field name="BK_REGIAO_DES" type="string"/>
<Field name="BK_REGIAO_DEV" type="string"/>
<Field name="BK_REGIAO_CDRCAL" type="string"/>
<Field name="BK_REGIAO_CDRORI" type="string"/>
<Field name="FILIAL_DOCUMENTO" type="string"/>
<Field name="DOCUMENTO" type="string"/>
<Field eofAsDelimiter="false" name="SERIE" type="string"/>
<Field name="INSTANCIA" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata4" previewAttachment="zip:(${DATA_SOURCE_DIR}/PROTHEUS.zip)#TMS Performance Entrega.csv" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="," label="zip:(./data/source/PROTHEUS.zip)#TMS Performance Entrega.csv" name="Performance_Entrega_Input" previewAttachmentCharset="ISO-8859-1" quoteChar="&quot;" quotedStrings="true" recordDelimiter="\n" skipSourceRows="1" type="delimited">
<Field name="BK_EMPRESA" type="string"/>
<Field name="BK_FILIAL" type="string"/>
<Field name="DATA_EMISSAO" type="string"/>
<Field name="BK_REMETENTE" type="string"/>
<Field name="BK_DESTINATARIO" type="string"/>
<Field name="BK_DEVEDOR" type="string"/>
<Field name="BK_CDRORI" type="string"/>
<Field name="BK_CDRDES" type="string"/>
<Field name="BK_CODNEG" type="string"/>
<Field name="BK_SERNEG" type="string"/>
<Field name="BK_FILIAL_ORIGEM" type="string"/>
<Field name="BK_FILIAL_DESTINO" type="string"/>
<Field name="BK_FILIAL_DOCTO" type="string"/>
<Field name="BK_DOCTMS" type="string"/>
<Field name="BK_TIPTRA" type="string"/>
<Field name="DOCUMENTO" type="string"/>
<Field name="SERIE" type="string"/>
<Field name="PRAZO_ENTREGA" type="string"/>
<Field name="DATA_ENTREGA" type="string"/>
<Field name="BK_STATUS" type="string"/>
<Field name="BK_REGIAO_REM" type="string"/>
<Field name="BK_REGIAO_DES" type="string"/>
<Field name="BK_REGIAO_DEV" type="string"/>
<Field name="BK_REGIAO_CDRCAL" type="string"/>
<Field eofAsDelimiter="false" name="BK_REGIAO_CDRORI" type="string"/>
<Field name="INSTANCIA" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata5" previewAttachment="zip:(${DATA_SOURCE_DIR}/PROTHEUS.zip)#TMS Receita Transporte.csv" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="," label="zip:(./data/source/PROTHEUS.zip)#TMS Receita Transporte.csv" name="Receita_Transportadora_Input" previewAttachmentCharset="ISO-8859-1" quoteChar="&quot;" quotedStrings="true" recordDelimiter="\n" skipSourceRows="1" type="delimited">
<Field label="BK_EMPRESA" name="BK_EMPRESA" type="string"/>
<Field label="BK_FILIAL" name="BK_FILIAL" type="string"/>
<Field label="DATA_EMISSAO" name="DATA_EMISSAO" type="string"/>
<Field label="BK_REMETENTE" name="BK_REMETENTE" type="string"/>
<Field label="BK_DESTINATARIO" name="BK_DESTINATARIO" type="string"/>
<Field label="BK_DEVEDOR" name="BK_DEVEDOR" type="string"/>
<Field label="BK_CDRORI" name="BK_CDRORI" type="string"/>
<Field label="BK_CDRDES" name="BK_CDRDES" type="string"/>
<Field label="BK_CDRCAL" name="BK_CDRCAL" type="string"/>
<Field label="BK_COMPONENTE" name="BK_COMPONENTE" type="string"/>
<Field label="BK_NEGOCIACAO" name="BK_NEGOCIACAO" type="string"/>
<Field label="BK_SERVICO" name="BK_SERVICO" type="string"/>
<Field label="BK_FILIAL_ORIGEM" name="BK_FILIAL_ORIGEM" type="string"/>
<Field label="BK_FILIAL_DESTINO" name="BK_FILIAL_DESTINO" type="string"/>
<Field label="BK_FILIAL_DOCTO" name="BK_FILIAL_DOCTO" type="string"/>
<Field label="BK_DOCTMS" name="BK_DOCTMS" type="string"/>
<Field label="BK_TIPTRA" name="BK_TIPTRA" type="string"/>
<Field label="FILDOC" name="FILDOC" type="string"/>
<Field label="DOCUMENTO" name="DOCUMENTO" type="string"/>
<Field label="SERIE" name="SERIE" type="string"/>
<Field label="PRODUTO" name="PRODUTO" type="string"/>
<Field label="BK_REGIAO_REM" name="BK_REGIAO_REM" type="string"/>
<Field label="BK_REGIAO_DES" name="BK_REGIAO_DES" type="string"/>
<Field label="BK_REGIAO_DEV" name="BK_REGIAO_DEV" type="string"/>
<Field label="BK_REGIAO_CDRCAL" name="BK_REGIAO_CDRCAL" type="string"/>
<Field label="BK_REGIAO_CDRORI" name="BK_REGIAO_CDRORI" type="string"/>
<Field label="BK_FILIAL_ORIGEM" name="BK_FILIAL_ORIGEM_1" type="string"/>
<Field label="VALOR_COMPONENTE" name="VALOR_COMPONENTE" type="string"/>
<Field label="VALOR_IMPOSTO" name="VALOR_IMPOSTO" type="string"/>
<Field eofAsDelimiter="false" label="VALOR_TOTAL" name="VALOR_TOTAL" type="string"/>
<Field name="INSTANCIA" type="string"/>
</Record>
</Metadata>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
<Sequence cached="8" id="Sequence0" name="SequenciaHom" start="1" step="1" type="PRIMITIVE_SEQUENCE"/>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" enabled="true" folded="false" height="642" id="Note0" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="1. CARGA DO DATASET DOCUMENTO (DIMENSÃO)" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="1177" x="7" y="8"/>
<Dictionary/>
</Global>
<Phase number="10">
<Node dedupKey="DOCUMENTO(a);SERIE(a);INSTANCIA(a)" enabled="enabled" guiName="Dedup" guiX="850" guiY="289" id="DEDUP" type="DEDUP"/>
<Node dataset="dataset.documento" datasetFieldMappings="{&quot;gd_dataset&quot;:{&quot;datasetId&quot;:&quot;dataset.documento&quot;,&quot;datasetTitle&quot;:&quot;Documento&quot;,&quot;attributes&quot;:[{&quot;gd_dataset_attribute&quot;:{&quot;id&quot;:&quot;attr.documento1.codigodocumento&quot;,&quot;title&quot;:&quot;Código Documento&quot;,&quot;prettyId&quot;:&quot;attr_documento1_codigodocumento&quot;,&quot;displayForms&quot;:[{&quot;gd_dataset_attribute_display_form&quot;:{&quot;id&quot;:&quot;label.documento1.codigodocumento&quot;,&quot;title&quot;:&quot;Código Documento&quot;,&quot;prettyId&quot;:&quot;codigodocumento&quot;,&quot;assignedMetadataField&quot;:&quot;DOCUMENTO&quot;,&quot;type&quot;:&quot;STRING&quot;,&quot;referenceKey&quot;:true}}],&quot;assignedMetadataField&quot;:null,&quot;selectedDisplayForm&quot;:null}},{&quot;gd_dataset_attribute&quot;:{&quot;id&quot;:&quot;attr.documento1.seriedocumento&quot;,&quot;title&quot;:&quot;Série Documento&quot;,&quot;prettyId&quot;:&quot;attr_documento1_seriedocumento&quot;,&quot;displayForms&quot;:[{&quot;gd_dataset_attribute_display_form&quot;:{&quot;id&quot;:&quot;label.documento1.seriedocumento&quot;,&quot;title&quot;:&quot;Série Documento&quot;,&quot;prettyId&quot;:&quot;seriedocumento&quot;,&quot;assignedMetadataField&quot;:&quot;SERIE&quot;,&quot;type&quot;:&quot;STRING&quot;,&quot;referenceKey&quot;:true}}],&quot;assignedMetadataField&quot;:null,&quot;selectedDisplayForm&quot;:null}}],&quot;referencedAttributes&quot;:[{&quot;gd_dataset_attribute&quot;:{&quot;id&quot;:&quot;attr.instancia.iddainstancia&quot;,&quot;title&quot;:&quot;Id da Instância&quot;,&quot;prettyId&quot;:&quot;attr_instancia_iddainstancia&quot;,&quot;displayForms&quot;:[{&quot;gd_dataset_attribute_display_form&quot;:{&quot;id&quot;:&quot;label.instancia.iddainstancia&quot;,&quot;title&quot;:&quot;Id da Instância&quot;,&quot;prettyId&quot;:&quot;instancia__iddainstancia&quot;,&quot;assignedMetadataField&quot;:null,&quot;type&quot;:&quot;STRING&quot;,&quot;referenceKey&quot;:false}}],&quot;assignedMetadataField&quot;:&quot;INSTANCIA&quot;,&quot;selectedDisplayForm&quot;:{&quot;gd_dataset_attribute_display_form&quot;:{&quot;id&quot;:&quot;label.instancia.iddainstancia&quot;,&quot;title&quot;:&quot;Id da Instância&quot;,&quot;prettyId&quot;:&quot;instancia__iddainstancia&quot;,&quot;assignedMetadataField&quot;:null,&quot;type&quot;:&quot;STRING&quot;,&quot;referenceKey&quot;:false}}}}],&quot;dateAttributes&quot;:[],&quot;simpleFacts&quot;:[],&quot;dateFacts&quot;:[],&quot;unassigneddateFacts&quot;:[],&quot;entitiesWithoutMetadata&quot;:[],&quot;entitiesWithoutValue&quot;:[],&quot;datesWithFactConflict&quot;:[],&quot;fieldsWithMetadataConflict&quot;:[]}}" enabled="enabled" guiName="Documento" guiX="1030" guiY="289" id="DOCUMENTO" mode="${LOAD_MODE_DIM}" retriesInterval="60" retriesNumber="5" type="GD_DATASET_WRITER"/>
<Node enabled="enabled" guiName="FastSort" guiX="665" guiY="289" id="FAST_SORT" sortKey="DOCUMENTO(a);SERIE(a);INSTANCIA(a)" type="FAST_SORT"/>
<Node charset="ISO-8859-1" enabled="enabled" fileURL="zip:(${DATA_SOURCE_DIR}/${gdc_agent_zip})#TMS Indenizacao Transporte.csv*" guiName="Indenização Transporte" guiX="48" guiY="504" id="INDENIZACAO_TRANSPORTE" type="DATA_READER"/>
<Node charset="ISO-8859-1" enabled="enabled" fileURL="zip:(${DATA_SOURCE_DIR}/${gdc_agent_zip})#TMS Movimentacao Carga.csv*" guiName="Movimentação Carga" guiX="48" guiY="79" id="MOVIMENTACAO_CARGA" type="DATA_READER"/>
<Node charset="ISO-8859-1" enabled="enabled" fileURL="zip:(${DATA_SOURCE_DIR}/${gdc_agent_zip})#TMS Ocorrencias Transporte.csv*" guiName="Ocorrências Transporte" guiX="42" guiY="185" id="OCORRENCIAS_TRANSPORTE" type="DATA_READER"/>
<Node charset="ISO-8859-1" enabled="enabled" fileURL="zip:(${DATA_SOURCE_DIR}/${gdc_agent_zip})#TMS Performance Entrega.csv*" guiName="Performance Entrega" guiX="47" guiY="289" id="PERFORMANCE_ENTREGA" type="DATA_READER"/>
<Node charset="ISO-8859-1" enabled="enabled" fileURL="zip:(${DATA_SOURCE_DIR}/${gdc_agent_zip})#TMS Receita Transporte.csv*" guiName="Receita Transportadora" guiX="42" guiY="396" id="RECEITA_TRANSPORTADORA1" type="DATA_READER"/>
<Node enabled="enabled" guiName="SimpleGather" guiX="508" guiY="288" id="SIMPLE_GATHER" type="SIMPLE_GATHER"/>
<Node enabled="enabled" guiName="Tratament" guiX="257" guiY="185" id="TRATAMENT1" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2
import "trans/lib.ctl";
// Transforms input record into output record.
function integer transform() {
	$out.0.DOCUMENTO = formatString($in.0.DOCUMENTO, null);
	$out.0.SERIE = formatString($in.0.SERIE, null);
	$out.0.INSTANCIA = formatKey($in.0.INSTANCIA, true);

	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Node enabled="enabled" guiName="Tratament" guiX="257" guiY="79" id="TRATAMENT2" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2
import "trans/lib.ctl";
// Transforms input record into output record.
function integer transform() {
	$out.0.DOCUMENTO = formatString($in.0.DOCUMENTO, null);
	$out.0.SERIE = formatString($in.0.SERIE, null);
	$out.0.INSTANCIA = formatKey($in.0.INSTANCIA, true);

	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Node enabled="enabled" guiName="Tratament" guiX="257" guiY="289" id="TRATAMENT3" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2
import "trans/lib.ctl";
// Transforms input record into output record.
function integer transform() {
	$out.0.DOCUMENTO = formatString($in.0.DOCUMENTO, null);
	$out.0.SERIE = formatString($in.0.SERIE, null);
	$out.0.INSTANCIA = formatKey($in.0.INSTANCIA, true);

	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Node enabled="enabled" guiName="Tratament" guiX="257" guiY="396" id="TRATAMENT4" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2
import "trans/lib.ctl";
// Transforms input record into output record.
function integer transform() {
	$out.0.DOCUMENTO = formatString($in.0.DOCUMENTO, null);
	$out.0.SERIE = formatString($in.0.SERIE, null);
	$out.0.INSTANCIA = formatKey($in.0.INSTANCIA, true);
	
	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Node enabled="enabled" guiName="Tratament" guiX="257" guiY="504" id="TRATAMENT5" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2
import "trans/lib.ctl";
// Transforms input record into output record.
function integer transform() {
	$out.0.DOCUMENTO = formatString($in.0.BK_NUMERO_DOCUMENTO, null);
	$out.0.SERIE = formatString($in.0.BK_SERIE, null);
	$out.0.INSTANCIA = formatKey($in.0.INSTANCIA, true);

	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Edge debugMode="true" fromNode="DEDUP:0" guiBendpoints="" guiRouter="Manhattan" id="Edge15" inPort="Port 0 (in)" metadata="Metadata6" outPort="Port 0 (unique)" toNode="DOCUMENTO:0"/>
<Edge debugMode="true" fromNode="FAST_SORT:0" guiBendpoints="" guiRouter="Manhattan" id="Edge14" inPort="Port 0 (in)" metadata="Metadata6" outPort="Port 0 (out)" toNode="DEDUP:0"/>
<Edge debugMode="true" fromNode="INDENIZACAO_TRANSPORTE:0" guiBendpoints="" guiRouter="Manhattan" id="Edge8" inPort="Port 0 (in)" metadata="Metadata3" outPort="Port 0 (output)" toNode="TRATAMENT5:0"/>
<Edge debugMode="true" fromNode="MOVIMENTACAO_CARGA:0" guiBendpoints="" guiRouter="Manhattan" id="Edge3" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" toNode="TRATAMENT2:0"/>
<Edge debugMode="true" fromNode="OCORRENCIAS_TRANSPORTE:0" guiBendpoints="" guiRouter="Manhattan" id="Edge5" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (output)" toNode="TRATAMENT1:0"/>
<Edge debugMode="true" fromNode="PERFORMANCE_ENTREGA:0" guiBendpoints="" guiRouter="Manhattan" id="Edge6" inPort="Port 0 (in)" metadata="Metadata4" outPort="Port 0 (output)" toNode="TRATAMENT3:0"/>
<Edge debugMode="true" fromNode="RECEITA_TRANSPORTADORA1:0" guiBendpoints="" guiRouter="Manhattan" id="Edge7" inPort="Port 0 (in)" metadata="Metadata5" outPort="Port 0 (output)" toNode="TRATAMENT4:0"/>
<Edge debugMode="true" fromNode="SIMPLE_GATHER:0" guiBendpoints="" guiRouter="Manhattan" id="Edge9" inPort="Port 0 (in)" metadata="Metadata6" outPort="Port 0 (out)" toNode="FAST_SORT:0"/>
<Edge fromNode="TRATAMENT1:0" guiBendpoints="" guiRouter="Manhattan" id="Edge10" inPort="Port 1 (in)" metadata="Metadata6" outPort="Port 0 (out)" toNode="SIMPLE_GATHER:1"/>
<Edge debugMode="true" fromNode="TRATAMENT2:0" guiBendpoints="" guiRouter="Manhattan" id="Edge4" inPort="Port 0 (in)" metadata="Metadata6" outPort="Port 0 (out)" toNode="SIMPLE_GATHER:0"/>
<Edge fromNode="TRATAMENT3:0" guiBendpoints="" guiRouter="Manhattan" id="Edge11" inPort="Port 2 (in)" metadata="Metadata6" outPort="Port 0 (out)" toNode="SIMPLE_GATHER:2"/>
<Edge fromNode="TRATAMENT4:0" guiBendpoints="" guiRouter="Manhattan" id="Edge12" inPort="Port 3 (in)" metadata="Metadata6" outPort="Port 0 (out)" toNode="SIMPLE_GATHER:3"/>
<Edge fromNode="TRATAMENT5:0" guiBendpoints="" guiRouter="Manhattan" id="Edge13" inPort="Port 4 (in)" metadata="Metadata6" outPort="Port 0 (out)" toNode="SIMPLE_GATHER:4"/>
</Phase>
</Graph>
